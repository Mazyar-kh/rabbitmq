import pika

connection = pika.blockingconnection(pika.coonectioparameters(host='localhost'))
ch = connection.channel()

ch.queue_declare(queue='first')

message = 'this is a testing message'

ch.basic publish(exchange='', routing key='first', body=message, prperties=pika.basicproperties(selivery mode=2,))

print('sent message')

connection.close()


==================================================================

import pika
import ssl

# RabbitMQ connection parameters
credentials = pika.PlainCredentials('guest', 'guest')

ssl_context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)
ssl_context.load_cert_chain(
    certfile="/etc/rabbitmq/tls-gen/basic/result/client_maz-virtual-machine_certificate.pem",
    keyfile="/etc/rabbitmq/tls-gen/basic/result/client_maz-virtual-machine_key.pem"
)

parameters = pika.ConnectionParameters(
    host='127.0.0.1',
    port=5671,
    virtual_host='/',
    credentials=credentials,
    ssl_options=pika.SSLOptions(ssl_context)
)

# Connect to RabbitMQ server
connection = pika.BlockingConnection(pika.ConnectionParameters(host='127.0.0.1'))
channel = connection.channel()

# Declare a queue and exchange
channel.queue_declare(queue='my_queue')
message = "this is a test"
channel.exchange_declare(exchange='my_exchange', exchange_type='direct')

# Publish a message to the queue
channel.basic_publish(exchange='my_exchange',routing_key='my_queue',body=message)

print('sent message')

# Close the connection
connection.close()


========================================================


import pika
import ssl

# RabbitMQ connection parameters
credentials = pika.PlainCredentials('guest', 'guest')
ssl_context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)

# Load the certificate and key files without a passphrase
ssl_context.load_cert_chain(
    certfile="/etc/rabbitmq/tls-gen/basic/result/client_maz-virtual-machine_certificate.pem",
    keyfile="/etc/rabbitmq/tls-gen/basic/result/client_maz-virtual-machine_key.pem",
    password=""  # Use an empty string as the passphrase
)

parameters = pika.ConnectionParameters(
    host='127.0.0.1',
    port=5671,
    virtual_host='/',
    credentials=credentials,
    ssl_options=pika.SSLOptions(ssl_context)
)

# Connect to RabbitMQ server
connection = pika.BlockingConnection(parameters)
channel = connection.channel()

# Declare a queue and exchange
channel.queue_declare(queue='my_queue')
message = "this is a test"
channel.exchange_declare(exchange='my_exchange', exchange_type='direct')

# Publish a message to the queue
channel.basic_publish(exchange='my_exchange',routing_key='my_queue',body=message)

print('sent message')

# Close the connection
connection.close()







