import pika
import ssl

# RabbitMQ connection parameters
credentials = pika.PlainCredentials('guest', 'guest')

ssl_context = ssl.create_default_context(ssl.Purpose.CLIENT_AUTH)
ssl_context.load_cert_chain(
    certfile="/etc/rabbitmq/tls-gen/basic/result/client_maz-virtual-machine_certificate.pem",
    keyfile="/etc/rabbitmq/tls-gen/basic/result/client_maz-virtual-machine_key.pem",
    password="mazyar"
)

parameters = pika.ConnectionParameters(
    host='127.0.0.1',
    port=5671,  # Use the correct port for SSL/TLS (e.g., 5671)
    virtual_host='/',
    credentials=credentials,
    ssl_options=pika.SSLOptions(ssl_context)
)

# Connect to RabbitMQ server
connection = pika.BlockingConnection(parameters)
channel = connection.channel()

# Declare a queue
queue_name = "my_queue"
channel.queue_declare(queue=queue_name)
channel.exchange_declare(exchange='my_exchange', exchange_type='direct')

# Publish a message
message = "Hello, RabbitMQ!"
channel.basic_publish(exchange="my_exchange", routing_key=queue_name, body=message)

print(f"Message sent: {message}")

# Close the connection
connection.close()


raise self._reap_last_connection_workflow_error(error)
pika.exceptions.AMQPConnectionError

